{"ast":null,"code":"var _jsxFileName = \"/home/rjmata95/Desktop/Learning/platzi/react/platzi-conf-merch/src/components/FormsUI/Select/index.js\",\n    _s = $RefreshSig$();\n\nimport { MenuItem, Select, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport countries from \"../utils/countries.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectWrapper = ({\n  name,\n  options,\n  ...otherprops\n}) => {\n  _s();\n\n  const [field, mata] = useField(name);\n  const {\n    setFieldValue\n  } = useFormikContext(name);\n  const configSelect = { ...field,\n    ...otherprops,\n    select: true,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange\n  };\n\n  const handleChange = ev => {\n    const {\n      value\n    } = ev.target;\n    setFieldValue(value);\n  };\n\n  if (mata && mata.error && mata.touched) {\n    configSelect.error = true;\n    configSelect.helperText = mata.error;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TextField, { ...configSelect,\n      children: Object.keys(countries).map((item, index) => {\n        /*#__PURE__*/\n        _jsxDEV(MenuItem, {\n          value: item,\n          children: \"countries[item]\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SelectWrapper, \"ZXOMEXG06vkL9tdJN0wVagCX1M8=\", false, function () {\n  return [useField, useFormikContext];\n});\n\n_c = SelectWrapper;\nexport default SelectWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectWrapper\");","map":{"version":3,"sources":["/home/rjmata95/Desktop/Learning/platzi/react/platzi-conf-merch/src/components/FormsUI/Select/index.js"],"names":["MenuItem","Select","TextField","React","useField","useFormikContext","countries","SelectWrapper","name","options","otherprops","field","mata","setFieldValue","configSelect","select","variant","fullWidth","onChange","handleChange","ev","value","target","error","touched","helperText","Object","keys","map","item","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,mBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,QAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiB,KAAGC;AAApB,CAAD,KAAsC;AAAA;;AAC1D,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBR,QAAQ,CAACI,IAAD,CAA9B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAoBR,gBAAgB,CAACG,IAAD,CAA1C;AACA,QAAMM,YAAY,GAAG,EACnB,GAAGH,KADgB;AAEnB,OAAGD,UAFgB;AAGnBK,IAAAA,MAAM,EAAE,IAHW;AAInBC,IAAAA,OAAO,EAAE,UAJU;AAKnBC,IAAAA,SAAS,EAAE,IALQ;AAMnBC,IAAAA,QAAQ,EAAEC;AANS,GAArB;;AASA,QAAMA,YAAY,GAAIC,EAAD,IAAQ;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAYD,EAAE,CAACE,MAArB;AACAT,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACD,GAHD;;AAKA,MAAIT,IAAI,IAAIA,IAAI,CAACW,KAAb,IAAsBX,IAAI,CAACY,OAA/B,EAAwC;AACtCV,IAAAA,YAAY,CAACS,KAAb,GAAqB,IAArB;AACAT,IAAAA,YAAY,CAACW,UAAb,GAA0Bb,IAAI,CAACW,KAA/B;AACD;;AAED,sBACE;AAAA,2BACE,QAAC,SAAD,OAAeT,YAAf;AAAA,gBACGY,MAAM,CAACC,IAAP,CAAYrB,SAAZ,EAAuBsB,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3C;AAAA,gBAAC,QAAD;AAAsB,UAAA,KAAK,EAAED,IAA7B;AAAA;AAAA,WAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAGD,OAJA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAjCD;;GAAMvB,a;UACkBH,Q,EACIC,gB;;;KAFtBE,a;AAmCN,eAAeA,aAAf","sourcesContent":["import { MenuItem, Select, TextField } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport countries from \"../utils/countries.json\";\n\nconst SelectWrapper = ({ name, options, ...otherprops }) => {\n  const [field, mata] = useField(name);\n  const { setFieldValue } = useFormikContext(name);\n  const configSelect = {\n    ...field,\n    ...otherprops,\n    select: true,\n    variant: \"outlined\",\n    fullWidth: true,\n    onChange: handleChange,\n  };\n\n  const handleChange = (ev) => {\n    const { value } = ev.target;\n    setFieldValue(value);\n  };\n\n  if (mata && mata.error && mata.touched) {\n    configSelect.error = true;\n    configSelect.helperText = mata.error;\n  }\n\n  return (\n    <>\n      <TextField {...configSelect}>\n        {Object.keys(countries).map((item, index) => {\n          <MenuItem key={index} value={item}>\n            countries[item]\n          </MenuItem>;\n        })}\n      </TextField>\n    </>\n  );\n};\n\nexport default SelectWrapper;\n"]},"metadata":{},"sourceType":"module"}