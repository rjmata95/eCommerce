{"ast":null,"code":"var _jsxFileName = \"/home/rjmata95/Desktop/Learning/platzi/react/platzi-conf-merch/client/src/components/LogIn/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Grid, Button, Container, Typography } from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../../context/AppContext\";\nimport Textfield from \"../FormsUI/Textfield\";\nimport PasswordInput from \"./PasswordInput\";\nimport validationSchema from \"./validationSchema.js\";\nimport initialValues from \"./initialValues.js\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { signin, signup } from \"../../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LogIn = ({}) => {\n  _s();\n\n  const [isSignUp, setSignUp] = useState(false);\n  const {\n    setUser\n  } = useContext(AppContext);\n  const history = useHistory();\n\n  const handleSubmit = async values => {\n    let response;\n\n    try {\n      var _response, _response2;\n\n      if (!isSignUp) {\n        response = await signin(values);\n      } else {\n        response = await signup(values);\n      }\n\n      if (!response.result) throw response.message;\n      const profile = {\n        profile: (_response = response) === null || _response === void 0 ? void 0 : _response.result,\n        token: (_response2 = response) === null || _response2 === void 0 ? void 0 : _response2.token\n      };\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setUser(profile);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(`Index: ${error}`);\n    }\n  };\n\n  const toggleSignUp = () => {\n    setSignUp(prevState => !prevState);\n  };\n\n  const responseGoogle = async response => {\n    console.log(response);\n  };\n\n  const googleSuccess = async res => {\n    const profile = {\n      profile: res === null || res === void 0 ? void 0 : res.profileObj,\n      token: res === null || res === void 0 ? void 0 : res.tokenId\n    };\n\n    try {\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setUser(profile);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(`Error within google Success function: ${error}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema(isSignUp),\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Textfield, {\n                name: \"firstName\",\n                label: \"First name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Textfield, {\n                name: \"lastName\",\n                label: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Textfield, {\n              name: \"email\",\n              label: \"E-Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n            name: \"password\",\n            confirmation: isSignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              fullWidth: true,\n              color: \"primary\" // onClick={handleSubmit}\n              ,\n              type: \"submit\",\n              children: isSignUp ? \"Sign Up\" : \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: \"109263540642-m011hv8epkc5d5q3kqhspe619c02graa.apps.googleusercontent.com\",\n              render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n                onClick: renderProps.onClick,\n                disabled: renderProps.disabled,\n                fullWidth: true,\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Google Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this),\n              onSuccess: googleSuccess,\n              onFailure: responseGoogle,\n              cookiePolicy: \"single_host_origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: toggleSignUp,\n              fullWidth: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: isSignUp ? \"Already have an account? Log in\" : \"Don't have an account? Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogIn, \"PrMm9lSXtl8RBMjkjYp1J4VqApQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = LogIn;\nexport default LogIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LogIn\");","map":{"version":3,"sources":["/home/rjmata95/Desktop/Learning/platzi/react/platzi-conf-merch/client/src/components/LogIn/index.jsx"],"names":["Grid","Button","Container","Typography","Form","Formik","React","useState","useContext","useEffect","useHistory","AppContext","Textfield","PasswordInput","validationSchema","initialValues","GoogleLogin","signin","signup","LogIn","isSignUp","setSignUp","setUser","history","handleSubmit","values","response","result","message","profile","token","localStorage","setItem","JSON","stringify","push","error","console","log","toggleSignUp","prevState","responseGoogle","googleSuccess","res","profileObj","tokenId","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import { Grid, Button, Container, Typography } from \"@material-ui/core\";\nimport { Form, Formik } from \"formik\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContext from \"../../context/AppContext\";\nimport Textfield from \"../FormsUI/Textfield\";\nimport PasswordInput from \"./PasswordInput\";\nimport validationSchema from \"./validationSchema.js\";\nimport initialValues from \"./initialValues.js\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { signin, signup } from \"../../utils/auth\";\n\nconst LogIn = ({}) => {\n  const [isSignUp, setSignUp] = useState(false);\n  const { setUser } = useContext(AppContext);\n  const history = useHistory();\n\n  const handleSubmit = async (values) => {\n    let response;\n    try {\n      if (!isSignUp) {\n        response = await signin(values);\n      } else {\n        response = await signup(values);\n      }\n      if (!response.result) throw response.message;\n\n      const profile = {\n        profile: response?.result,\n        token: response?.token,\n      };\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setUser(profile);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(`Index: ${error}`);\n    }\n  };\n  const toggleSignUp = () => {\n    setSignUp((prevState) => !prevState);\n  };\n  const responseGoogle = async (response) => {\n    console.log(response);\n  };\n  const googleSuccess = async (res) => {\n    const profile = {\n      profile: res?.profileObj,\n      token: res?.tokenId,\n    };\n    try {\n      localStorage.setItem(\"profile\", JSON.stringify(profile));\n      setUser(profile);\n      history.push(\"/\");\n    } catch (error) {\n      console.log(`Error within google Success function: ${error}`);\n    }\n  };\n  return (\n    <Container maxWidth=\"xs\">\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema(isSignUp)}\n        onSubmit={handleSubmit}\n      >\n        <Form>\n          <Grid container spacing={2}>\n            {isSignUp && (\n              <>\n                <Grid item xs={12} md={6}>\n                  <Textfield name=\"firstName\" label=\"First name\" />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <Textfield name=\"lastName\" label=\"Last Name\" />\n                </Grid>\n              </>\n            )}\n            <Grid item xs={12}>\n              <Textfield name=\"email\" label=\"E-Mail\" />\n            </Grid>\n            <PasswordInput name=\"password\" confirmation={isSignUp} />\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                // onClick={handleSubmit}\n                type=\"submit\"\n              >\n                {isSignUp ? \"Sign Up\" : \"Sign In\"}\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <GoogleLogin\n                clientId=\"109263540642-m011hv8epkc5d5q3kqhspe619c02graa.apps.googleusercontent.com\"\n                render={(renderProps) => (\n                  <Button\n                    onClick={renderProps.onClick}\n                    disabled={renderProps.disabled}\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                  >\n                    Google Sign In\n                  </Button>\n                )}\n                onSuccess={googleSuccess}\n                onFailure={responseGoogle}\n                cookiePolicy={\"single_host_origin\"}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button onClick={toggleSignUp} fullWidth>\n                <Typography variant=\"subtitle2\">\n                  {isSignUp\n                    ? \"Already have an account? Log in\"\n                    : \"Don't have an account? Sign up\"}\n                </Typography>\n              </Button>\n            </Grid>\n          </Grid>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n\nexport default LogIn;\n"]},"metadata":{},"sourceType":"module"}