{"ast":null,"code":"var _jsxFileName = \"/home/rjmata95/Desktop/Learning/platzi/react/platzi-conf-merch/src/components/Products.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport Product from \"./Product\";\nimport AppContext from \"../context/AppContext\";\nimport { Grid, makeStyles, Slide } from \"@material-ui/core\";\nimport { Dialog, Zoom, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\n\nconst Products = ({\n  products\n}) => {\n  _s();\n\n  const {\n    state,\n    addToCart\n  } = useContext(AppContext);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickDialog = () => {\n    setOpen(!open);\n  };\n\n  const classes = useStyles();\n\n  const handleAddToCart = product => {\n    addToCart(product);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Product, {\n          product: product,\n          handleAddToCart: handleAddToCart,\n          handleClickDialog: handleClickDialog\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open // TransitionComponent={<Slide />}\n      // keepMounted\n      ,\n      onClose: handleClickDialog,\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        children: \"Use Google's location service?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-slide-description\",\n          children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleAddToCart,\n          color: \"primary\",\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Products, \"u9av8AQX32505vzFiadHUOU2bNQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/rjmata95/Desktop/Learning/platzi/react/platzi-conf-merch/src/components/Products.jsx"],"names":["React","useContext","Product","AppContext","Grid","makeStyles","Slide","Dialog","Zoom","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","useStyles","theme","root","flexGrow","Products","products","state","addToCart","open","setOpen","useState","handleClickDialog","classes","handleAddToCart","product","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,QAAwC,mBAAxC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,iBALF,EAMEC,aANF,EAOEC,MAPF,QAQO,mBARP;;;AAUA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AADiC,CAAZ,CAAD,CAA5B;;AAMA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBpB,UAAU,CAACE,UAAD,CAAvC;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACwB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC9BF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAGA,QAAMI,OAAO,GAAGZ,SAAS,EAAzB;;AACA,QAAMa,eAAe,GAAIC,OAAD,IAAa;AACnCP,IAAAA,SAAS,CAACO,OAAD,CAAT;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,gBAEGT,QAAQ,CAACU,GAAT,CAAcD,OAAD,iBACZ,QAAC,IAAD;AACE,QAAA,IAAI,MADN;AAGE,QAAA,EAAE,EAAE,EAHN;AAIE,QAAA,EAAE,EAAE,CAJN;AAKE,QAAA,EAAE,EAAE,CALN;AAME,QAAA,EAAE,EAAE,CANN;AAOE,QAAA,SAAS,EAAEF,OAAO,CAACV,IAPrB;AAAA,+BASE,QAAC,OAAD;AACE,UAAA,OAAO,EAAEY,OADX;AAEE,UAAA,eAAe,EAAED,eAFnB;AAGE,UAAA,iBAAiB,EAAEF;AAHrB;AAAA;AAAA;AAAA;AAAA;AATF,SAEOG,OAAO,CAACE,EAFf;AAAA;AAAA;AAAA;AAAA,cADD;AAFH;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE,QAAC,MAAD;AACE,MAAA,IAAI,EAAER,IADR,CAEE;AACA;AAHF;AAIE,MAAA,OAAO,EAAEG,iBAJX;AAKE,yBAAgB,0BALlB;AAME,0BAAiB,gCANnB;AAAA,8BAQE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,0BAAhB;AAAA,kBACG;AADH;AAAA;AAAA;AAAA;AAAA,cARF,eAWE,QAAC,aAAD;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,gCAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF,eAiBE,QAAC,aAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEE,eAArC;AAAsD,UAAA,KAAK,EAAC,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AA+CD,CA1DD;;GAAMT,Q;UAOYJ,S;;;KAPZI,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport Product from \"./Product\";\nimport AppContext from \"../context/AppContext\";\nimport { Grid, makeStyles, Slide } from \"@material-ui/core\";\nimport {\n  Dialog,\n  Zoom,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nconst Products = ({ products }) => {\n  const { state, addToCart } = useContext(AppContext);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickDialog = () => {\n    setOpen(!open);\n  };\n  const classes = useStyles();\n  const handleAddToCart = (product) => {\n    addToCart(product);\n  };\n  return (\n    <>\n      <Grid container spacing={2}>\n        {/* {console.log(`inside products: ${products}`)} */}\n        {products.map((product) => (\n          <Grid\n            item\n            key={product.id}\n            xs={12}\n            sm={6}\n            md={4}\n            lg={3}\n            className={classes.root}\n          >\n            <Product\n              product={product}\n              handleAddToCart={handleAddToCart}\n              handleClickDialog={handleClickDialog}\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Dialog\n        open={open}\n        // TransitionComponent={<Slide />}\n        // keepMounted\n        onClose={handleClickDialog}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"contained\" onClick={handleAddToCart} color=\"primary\">\n            Add to Cart\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}